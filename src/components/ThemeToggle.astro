<div id="themeToggle" class="relative cursor-pointer p-4 ml-1 mr-1 flex">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="30"
    height="30"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="icon icon-tabler icons-tabler-outline icon-tabler-sun sun"
    ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
      d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"></path><path
      d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"
    ></path></svg
  >

  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="30"
    height="30"
    viewBox="0 0 24 24"
    fill="currentColor"
    class="icon icon-tabler icons-tabler-filled icon-tabler-moon moon"
    ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
      d="M12 1.992a10 10 0 1 0 9.236 13.838c.341 -.82 -.476 -1.644 -1.298 -1.31a6.5 6.5 0 0 1 -6.864 -10.787l.077 -.08c.551 -.63 .113 -1.653 -.758 -1.653h-.266l-.068 -.006l-.06 -.002z"
    ></path></svg
  >
  <!-- <SunIcon class="theme-toggle-icon size-5 transition-all" id="light-icon" /> -->

  <!-- <MoonIcon class="theme-toggle-icon size-5 transition-all" id="dark-icon" /> -->
</div>

<style>
  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }

  .display-none-theme-toggle {
    @apply hidden;
    display: none;
  }
</style>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }

    if (window.matchMedia('(prefers-color-scheme:dark)').matches) {
      return 'dark';
    }

    return 'light';
  })();

  const lightIcon = document.querySelector('.sun');
  const darkIcon = document.querySelector('.moon');

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
    lightIcon.classList.add('display-none-theme-toggle');
    darkIcon.classList.remove('display-none-theme-toggle');
  } else {
    document.documentElement.classList.add('dark');
    lightIcon.classList.remove('display-none-theme-toggle');
    darkIcon.classList.add('display-none-theme-toggle');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');

    if (isDark) {
      lightIcon.classList.remove('display-none-theme-toggle');
      darkIcon.classList.add('display-none-theme-toggle');
    } else {
      lightIcon.classList.add('display-none-theme-toggle');
      darkIcon.classList.remove('display-none-theme-toggle');
    }
  };

  document
    .getElementById('themeToggle')
    .addEventListener('click', handleToggleClick);
</script>
